<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kissco.shop.dao.ProductMapper">

<insert id="insertProduct" parameterType="product">
INSERT INTO 
	shop_product(
		product_code
		,product_category
		,product_name
		,product_price
		,product_stock
		,product_content
	<if test="productOriginalfilename != null">
		,product_originalfilename
		,product_savedfilename
	</if>
	)VALUES(
		#{productCode}
		,#{productCategory}
		,#{productName}
		,#{productPrice}
		,#{productStock}
		,#{productContent}
	<if test="productOriginalfilename != null">
		,#{productOriginalfilename}
		,#{productSavedfilename}
	</if>
	)
</insert>

<select id="allProductList" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
ORDER BY
	product_regdate DESC
</select>

<select id="OneProduct" resultType="product" parameterType="String">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_code = #{productCode}
</select>

<update id="updateProduct" parameterType="product">
UPDATE
	shop_product
SET
	product_category = #{productCategory}
	,product_name = #{productName}
	,product_price = #{productPrice}
	,product_stock = #{productStock}
	,product_content = #{productContent}
	<if test="productOriginalfilename != null">
		,product_originalfilename = #{productOriginalfilename}
		,product_savedfilename = #{productSavedfilename}
	</if>
WHERE
	product_code = #{productCode}
</update>

<!-- 여러개의 상품 다중처리시의 삭제 방법 -->
<delete id="deleteProduct" parameterType="java.util.List">
	<foreach collection="list" item="item" index="index" separator=";" open="DECLARE BEGIN" close="; END;">
		DELETE FROM
			shop_product
		WHERE
			product_Code = #{item.productCode}
	</foreach>
</delete>

<!-- 여러 이미지를 삭제하기위해 상품리스트를 조회하는 과정 -->
<select id="prouductCodeSearchList" resultType="product" parameterType="java.util.List">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE product_code in
<foreach collection="list" item="item" open="(" close=")" separator=",">
	#{item.productCode}
</foreach>
</select>






<select id="category1" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_category = 'category1'
</select>

<select id="category2" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_category = 'category2'
</select>

<select id="category3" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_category = 'category3'
</select>

<select id="category4" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_category = 'category4'
</select>

<select id="category5" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_category = 'category5'
</select>

<select id="category6" resultType="product">
SELECT
	product_code as productCode
	,product_category as productCategory
	,product_name as productName
	,product_price as productPrice
	,product_stock as productStock
	,product_originalfilename as productOriginalfilename
	,product_savedfilename as productSavedfilename
	,product_regdate as productRegdate
	,product_content as productContent
FROM
	shop_product
WHERE
	product_category = 'category6'
</select>

</mapper>
